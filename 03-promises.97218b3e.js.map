{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASG,iBAAiB,SACjCC,aAAcJ,SAASC,cAAc,qBACrCI,YAAaL,SAASC,cAAc,oBACpCK,cAAeN,SAASC,cAAc,sBACtCM,UAAWP,SAASC,cAAc,gBAKpCH,EAAKC,KAAKS,MAAMC,QAAU,OAC1BX,EAAKC,KAAKS,MAAME,eAAiB,QACjCZ,EAAKC,KAAKS,MAAMG,WAAa,WAC7Bb,EAAKS,UAAUC,MAAMI,WAAa,OAClCd,EAAKS,UAAUC,MAAMK,OAAS,OAC9Bf,EAAKI,MAAMY,SAASZ,IAChBA,EAAMM,MAAMC,QAAU,OACtBP,EAAMM,MAAMO,cAAgB,SAC5Bb,EAAMM,MAAME,eAAiB,QAC7BR,EAAMM,MAAMQ,UAAY,QACxBd,EAAMM,MAAMI,WAAa,UAK7B,IAAIK,EAAQ,EACVC,EAAO,EACPC,EAAS,EAEX,SAASC,IACPH,EAAQI,SAASvB,EAAKM,aAAakB,OACnCJ,EAAOG,SAASvB,EAAKO,YAAYiB,OACjCH,EAASE,SAASvB,EAAKQ,cAAcgB,OAIvC,WACE,GAAIL,EAAQ,GAAKE,GAAU,EAEzB,YADAI,EAAA3B,GAAS4B,OAAOC,QAAQ,wCAK1B,GAFAC,QAAQC,IAAI,QAASV,GACrBS,QAAQC,IAAI,gBAAiBT,EAAOC,GAChCF,GAASC,EAAOC,EAElB,YADAI,EAAA3B,GAAS4B,OAAOC,QAAQ,yBAM5B,WACE,IAAIG,EAAeX,EAEnB,IAAK,IAAIY,EAAI,EAAGA,EAAIV,EAAQU,IAC1BC,EAAcD,EAAI,EAAGD,GACrBA,GAAgBV,EARlBa,GAdAC,GA0BF,SAASF,EAAcG,EAAUC,GAC/B,MAAMC,EAAU,IAAIC,SAAQ,CAACC,EAAQC,KACnC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,GAEFF,EAAO,CAACJ,SAAU,GAAGA,IAAYU,MAAO,GAAGT,QAC3CX,EAAA3B,GAAS4B,OAAOoB,QAAQ,uBAAqBX,QAAiBC,SAI9DI,EAAO,CAACL,SAAU,GAAGA,IAAYU,MAAO,GAAGT,QAC3CX,EAAA3B,GAAS4B,OAAOC,QAAQ,sBAAoBQ,QAAeC,UAGhEA,MAGDC,EAAQU,MAAKC,IACXpB,QAAQC,IAAImB,MAEdX,EAAQY,OAAOC,IACbtB,QAAQC,IAAIqB,MAKhBlD,EAAKC,KAAKkD,iBAAiB,UAAWC,IACpCA,EAAMC,iBACN/B,IACAM,QAAQC,IAAI","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  input: document.querySelectorAll('label'),\n  fieldOfDelay: document.querySelector('input[name=delay]'),\n  fieldOfStep: document.querySelector('input[name=step]'),\n  fieldOfAmount: document.querySelector('input[name=amount]'),\n  submitBtn: document.querySelector('#submit-btn'),\n}\n\n//------------Styles-------------//\n\nrefs.form.style.display = 'flex';\nrefs.form.style.justifyContent = 'start';\nrefs.form.style.alignItems = 'flex-end';\nrefs.submitBtn.style.marginLeft = '10px';\nrefs.submitBtn.style.height = '25px';\nrefs.input.forEach((input) => {\n    input.style.display = 'flex';\n    input.style.flexDirection = 'column';\n    input.style.justifyContent = 'start';\n    input.style.textAlign = 'start';\n    input.style.marginLeft = '10px';\n});\n\n//-----------Program-------------//\n\nlet delay = 0,\n  step = 0,\n  amount = 0;\n\nfunction getInputData() {  \n  delay = parseInt(refs.fieldOfDelay.value);\n  step = parseInt(refs.fieldOfStep.value);\n  amount = parseInt(refs.fieldOfAmount.value);\n  checkInputData();\n}\n\nfunction checkInputData() { \n  if (delay < 0 || amount <= 0) {\n    Notiflix.Notify.failure(\"Delay and amount cannot be negative!\");\n    return;\n  };\n  console.log('delay', delay);\n  console.log('step * amount', step * amount);\n  if (delay < -step * amount) {\n    Notiflix.Notify.failure(\"Delay goes negative!\");\n    return;\n  };\n  initPromises();\n};\n\nfunction initPromises() { \n  let currentDelay = delay;\n\n  for (let i = 0; i < amount; i++) { \n    createPromise(i + 1, currentDelay)\n    currentDelay += step;\n  };\n};\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolv, reject) => { \n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolv({position: `${position}`, delay: `${delay}ms`});\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n\n      } else {\n        // Reject\n        reject({position: `${position}`, delay: `${delay}ms`});\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      \n      };\n}, delay);\n  });\n  \n  promise.then(result => {\n    console.log(result);\n  });\n  promise.catch (error => {\n    console.log(error);\n  });\n  \n};\n\nrefs.form.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n  getInputData();\n  console.log(\"event\");\n});\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","input","querySelectorAll","fieldOfDelay","fieldOfStep","fieldOfAmount","submitBtn","style","display","justifyContent","alignItems","marginLeft","height","forEach","flexDirection","textAlign","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$getInputData","parseInt","value","$parcel$interopDefault","Notify","failure","console","log","currentDelay","i","$47d4ff9957288465$var$createPromise","$47d4ff9957288465$var$initPromises","$47d4ff9957288465$var$checkInputData","position","delay1","promise","Promise","resolv","reject","shouldResolve","Math","random","setTimeout","delay","success","then","result","catch","error","addEventListener","event","preventDefault"],"version":3,"file":"03-promises.97218b3e.js.map"}